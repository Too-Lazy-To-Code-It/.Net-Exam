// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20240109084835_t")]
    partial class t
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Domain.Audit", b =>
                {
                    b.Property<int>("ReferenceAudit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceAudit"));

                    b.Property<string>("CabinetAuditFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FrequenceAudit")
                        .HasColumnType("int");

                    b.Property<bool>("StatutAudit")
                        .HasColumnType("bit");

                    b.HasKey("ReferenceAudit");

                    b.HasIndex("CabinetAuditFK");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Cabinet_Audit", b =>
                {
                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Adresse");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("ApplicationCore.Domain.DetailsAudit", b =>
                {
                    b.Property<string>("EquipementFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuditFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAudit")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditReferenceAudit")
                        .HasColumnType("int");

                    b.Property<int>("DureAuditJour")
                        .HasColumnType("int");

                    b.Property<string>("EquipementReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Prix")
                        .HasColumnType("int");

                    b.HasKey("EquipementFK", "AuditFK", "DateAudit");

                    b.HasIndex("AuditReferenceAudit");

                    b.HasIndex("EquipementReference");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entreprise", b =>
                {
                    b.Property<string>("NomEntreprise")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdresseEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbrEquipement")
                        .HasColumnType("int");

                    b.HasKey("NomEntreprise");

                    b.ToTable("Entreprisees");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Equipement", b =>
                {
                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateFabrication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeEquipement")
                        .HasColumnType("int");

                    b.HasKey("Reference");

                    b.ToTable("Equipements");
                });

            modelBuilder.Entity("EntrepriseEquipement", b =>
                {
                    b.Property<string>("EntrepriseNomEntreprise")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EquipementsReference")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EntrepriseNomEntreprise", "EquipementsReference");

                    b.HasIndex("EquipementsReference");

                    b.ToTable("EntrepriseEquipement");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Audit", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Cabinet_Audit", "Cabinet_Audit")
                        .WithMany("Audits")
                        .HasForeignKey("CabinetAuditFK")
                        .IsRequired();

                    b.Navigation("Cabinet_Audit");
                });

            modelBuilder.Entity("ApplicationCore.Domain.DetailsAudit", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Audit", "Audit")
                        .WithMany("DetailsAudits")
                        .HasForeignKey("AuditReferenceAudit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Domain.Equipement", "Equipement")
                        .WithMany()
                        .HasForeignKey("EquipementReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audit");

                    b.Navigation("Equipement");
                });

            modelBuilder.Entity("EntrepriseEquipement", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Entreprise", null)
                        .WithMany()
                        .HasForeignKey("EntrepriseNomEntreprise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Domain.Equipement", null)
                        .WithMany()
                        .HasForeignKey("EquipementsReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Domain.Audit", b =>
                {
                    b.Navigation("DetailsAudits");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Cabinet_Audit", b =>
                {
                    b.Navigation("Audits");
                });
#pragma warning restore 612, 618
        }
    }
}
